{"version":3,"file":"component---src-pages-stories-derla-index-tsx-7c810a18039e60fd424b.js","mappings":"yJAYA,IANwC,SAACA,GACvC,OACE,sBAAIC,UAAU,eAAc,8BAASD,EAAME,a,6CCgC/C,IA5BmC,SAACF,GAmBlC,OACE,gBAAC,IAAD,CACEG,SAdwB,SAACC,GAC3B,IAAIA,EAAKC,OAAOF,SAASG,QAAQ,GAAG,OAAO,KAE3C,IACMC,EADSH,EAAKC,OAAOF,SAASG,QACGE,QAAO,SAACC,EAAeC,GAE5D,OADAD,EAAIE,KAAKD,EAAIE,SACNH,IACN,IACH,OAA4B,IAAzBF,EAAcM,OAAoB,KAC9BN,EAKKO,CAAoBd,EAAMe,YAEpC,wBAAMC,SAAS,oBAAoBJ,QAASZ,EAAMe,UAAU,oBAAoBE,S,kFCxBhFC,EAAqBC,EAAAA,MACzB,kBAAM,kEAkCR,UA9BE,SAACnB,GACC,IAAMoB,EAA0B,oBAAXC,OAErB,OACE,gBAAC,IAAD,CACEN,UAAWf,EAAMsB,YAAYC,UAC7BC,cAAe,gBAAC,IAAD,CAAWT,UAAWf,EAAMsB,YAAYC,YACvDE,IAAK,gBAAC,IAAD,CAAUV,UAAWf,EAAMsB,YAAYC,aAE5C,mCACA,sBACEtB,UAAU,UACVyB,MAAO,CAAEC,WAAY,IAAKC,SAAU,WAFtC,qIAMA,2BACA,qBAAG3B,UAAU,aAAb,OAA6B,qBAAG4B,KAAK,yCAAyCC,OAAO,SAAxD,oDAA7B,+EAA6N,kDAA7N,0FACA,2BACA,gBAAC,IAAD,8BACA,qBAAG7B,UAAU,QAAb,gHACEmB,GACA,gBAAC,WAAD,CAAgBW,SAAU,6BACxB,gBAACb,EAAD","sources":["webpack://sebastian-stoff-portfolio/./src/components/shared/ContentHeading/index.tsx","webpack://sebastian-stoff-portfolio/./src/components/shared/OrcidHead/index.tsx","webpack://sebastian-stoff-portfolio/./src/pages/stories/derla/index.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface Props {\r\n  children: string;\r\n}\r\n\r\nconst ContentHeading: React.FC<Props> = (props) => {\r\n  return (\r\n    <h2 className=\"h3 d-inline\"><strong>{props.children}</strong></h2>\r\n  );\r\n};\r\n\r\nexport default ContentHeading;\r\n","import React from \"react\";\r\nimport { Orcid } from \"../../../types/orcid\";\r\nimport Head from \"../Head\";\r\n\r\ninterface Props {\r\n  orcidRoot: Orcid.RootObject;\r\n}\r\n\r\n/**\r\n * Component that handles generation of <head> element based on data provided by ORCID.\r\n * @param props.orcidRoot root object of ORCID public API response \r\n */\r\nconst OrcidHead: React.FC<Props> = (props) => {\r\n\r\n  /**\r\n   * Reduces ORCIDs keyword-objec-array to a simple string array. \r\n   * @param root root object of ORCID public API response \r\n   * @returns {string[] | null} keywords as string-array or null if empty / undefined.\r\n   */\r\n  const reduceOrcidKeywords = (root: Orcid.RootObject): string[] | null => {\r\n    if(!root.person.keywords.keyword[0])return null;\r\n    // reduce to string array\r\n    const kwords = root.person.keywords.keyword;\r\n    const reducedKwords: string[] = kwords.reduce((agg: string[], val) => {\r\n      agg.push(val.content);\r\n      return agg;\r\n    }, [])\r\n    if(reducedKwords.length === 0)return null;\r\n    return reducedKwords;\r\n  }\r\n\r\n  return (\r\n    <Head\r\n      keywords={reduceOrcidKeywords(props.orcidRoot)}\r\n    >\r\n      <meta property=\"schema_org:sameAs\" content={props.orcidRoot[\"orcid-identifier\"].uri} />\r\n    </Head>\r\n  );\r\n};\r\n\r\nexport default OrcidHead;\r\n","import React from \"react\";\r\nimport BaseLayout from \"../../../components/shared/layouts/BaseLayout\";\r\nimport OrcidHead from \"../../../components/shared/OrcidHead\";\r\nimport OrcidNav from \"../../../components/shared/OrcidNav\";\r\nimport { Orcid } from \"../../../types/orcid\";\r\nimport ContentHeading from \"../../../components/shared/ContentHeading\";\r\n\r\n/**\r\n * React scrollama needs to be lazy loaded. https://www.gatsbyjs.com/docs/using-client-side-only-packages/#workaround-3-load-client-side-dependent-components-with-loadable-components\r\n * Because of client only calculations that breaks SSR.\r\n */\r\nconst ClientSideOnlyLazy = React.lazy(\r\n  () => import(\"../../../components/static/stories/DerlaStory\")\r\n);\r\n\r\nconst DerlaStoriesPage: React.FC<{ pageContext: { persOrcid: Orcid.RootObject } }> =\r\n  (props) => {\r\n    const isSSR = typeof window === \"undefined\";\r\n\r\n    return (\r\n      <BaseLayout\r\n        orcidRoot={props.pageContext.persOrcid}\r\n        headComponent={<OrcidHead orcidRoot={props.pageContext.persOrcid} />}\r\n        nav={<OrcidNav orcidRoot={props.pageContext.persOrcid} />}\r\n      >\r\n        <h1>Derla</h1>\r\n        <h2\r\n          className=\"h5 mb-4\"\r\n          style={{ fontWeight: 300, fontSize: \"1.35em\" }}\r\n        >\r\n          A research project at the University of Graz (together with ZIM Graz, CJS - Center for Jewish Studies, _erinnern.at__ Vorarblerg)\r\n        </h2>\r\n        <hr/>\r\n        <p className=\"w-75 mb-0\">The <a href=\"https://gams.uni-graz.at/context:derla\" target=\"blank\">Digital Landscape of Remembrance Austria (DERLA)</a> is a scientific documentation and mediation project. It documents Austrian <strong>places and signs</strong> of remembrance for the victims as well as the places of terror of National Socialism.</p>\r\n        <br></br>\r\n        <ContentHeading>Places of remembrance</ContentHeading>\r\n        <p className=\"w-75\">\"Places of remembrance,\" memorials and monuments are visible signs of historical awareness in everyday life</p>\r\n        {!isSSR && (\r\n          <React.Suspense fallback={<div />}>\r\n            <ClientSideOnlyLazy />\r\n          </React.Suspense>\r\n        )}\r\n      </BaseLayout>\r\n    );\r\n  };\r\n\r\nexport default DerlaStoriesPage;\r\n"],"names":["props","className","children","keywords","root","person","keyword","reducedKwords","reduce","agg","val","push","content","length","reduceOrcidKeywords","orcidRoot","property","uri","ClientSideOnlyLazy","React","isSSR","window","pageContext","persOrcid","headComponent","nav","style","fontWeight","fontSize","href","target","fallback"],"sourceRoot":""}