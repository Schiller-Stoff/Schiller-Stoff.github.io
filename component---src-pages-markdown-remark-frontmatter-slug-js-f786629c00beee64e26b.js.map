{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-js-f786629c00beee64e26b.js","mappings":"mOAKe,SAASA,EAAT,GAGX,IAFFC,EAEC,EAFDA,YAGQC,EADP,EADDC,KAEQD,eACAE,EAAgCF,EAAhCE,YAAaC,EAAmBH,EAAnBG,KAAMC,EAAaJ,EAAbI,SAC3B,OACE,gBAAC,IAAD,CAAYC,UAAWN,EAAYO,WACjC,uBAAKC,UAAU,sBAAsBC,MAAO,CAAEC,UAAW,SACvD,uBAAKF,UAAU,aACb,yBACE,8BAASL,EAAYQ,OADvB,MAC0CR,EAAYS,MAEtD,2BACA,2BACA,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,GAAI,GACP,uBACEL,UAAU,oBACVM,wBAAyB,CAAEC,OAAQX,MAGvC,gBAAC,IAAD,KACE,sBAAII,UAAU,qDACXH,EAASW,KAAI,SAAAC,GAAI,OAAI,0BAAI,6BAAQA,EAAKC","sources":["webpack://sebastian-stoff-portfolio/./src/pages/{MarkdownRemark.frontmatter__slug}.js"],"sourcesContent":["import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport BaseLayout from \"../components/shared/layouts/BaseLayout\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nexport default function Template({\r\n  pageContext,\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\r\n  const { frontmatter, html, headings } = markdownRemark;\r\n  return (\r\n    <BaseLayout orcidRoot={pageContext.persOrcid}>\r\n      <div className=\"blog-post-container\" style={{ minHeight: \"75vh\" }}>\r\n        <div className=\"blog-post\">\r\n          <p>\r\n            <strong>{frontmatter.title}</strong> | {frontmatter.date}\r\n          </p>\r\n          <hr />\r\n          <br />\r\n          <Row>\r\n            <Col lg={8}>\r\n              <div\r\n                className=\"blog-post-content\"\r\n                dangerouslySetInnerHTML={{ __html: html }}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <ul className=\"sticky-top pt-lg-5 text-secondary list-style-none\">\r\n                {headings.map(hObj => <li><small>{hObj.value}</small></li>)}\r\n              </ul>  \r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query ($id: String!) {\r\n  markdownRemark(id: {eq: $id}) {\r\n    html\r\n    frontmatter {\r\n      date(formatString: \"MMMM DD, YYYY\")\r\n      slug\r\n      title\r\n    }\r\n    headings {\r\n      value\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n"],"names":["Template","pageContext","markdownRemark","data","frontmatter","html","headings","orcidRoot","persOrcid","className","style","minHeight","title","date","lg","dangerouslySetInnerHTML","__html","map","hObj","value"],"sourceRoot":""}